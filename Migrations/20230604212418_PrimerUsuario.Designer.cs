// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TP_grupoA_Cine;

#nullable disable

namespace TP_grupoA_Cine.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20230604212418_PrimerUsuario")]
    partial class PrimerUsuario
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TP_grupoA_Cine.Funcion", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("CantClientes")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("date");

                    b.Property<int>("idPelicula")
                        .HasColumnType("int");

                    b.Property<int>("idSala")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("idPelicula");

                    b.HasIndex("idSala");

                    b.ToTable("Funciones", (string)null);
                });

            modelBuilder.Entity("TP_grupoA_Cine.Pelicula", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Duracion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Poster")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.Property<string>("Sinopsis")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("ID");

                    b.ToTable("Peliculas", (string)null);
                });

            modelBuilder.Entity("TP_grupoA_Cine.Sala", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Capacidad")
                        .HasColumnType("int");

                    b.Property<string>("Ubicacion")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Sala", (string)null);
                });

            modelBuilder.Entity("TP_grupoA_Cine.Usuario", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("Bloqueado")
                        .HasColumnType("bit");

                    b.Property<double>("Credito")
                        .HasColumnType("float");

                    b.Property<string>("DNI")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<bool>("EsAdmin")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaNacimiento")
                        .HasColumnType("date");

                    b.Property<int>("IntentosFallidos")
                        .HasColumnType("int");

                    b.Property<string>("Mail")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Usuarios", (string)null);

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Apellido = "Gomez",
                            Bloqueado = false,
                            Credito = 0.0,
                            DNI = "45678964",
                            EsAdmin = true,
                            FechaNacimiento = new DateTime(1974, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IntentosFallidos = 0,
                            Mail = "m@mail",
                            Nombre = "Obdulio",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("TP_grupoA_Cine.UsuarioFuncion", b =>
                {
                    b.Property<int>("idUsuario")
                        .HasColumnType("int");

                    b.Property<int>("idFuncion")
                        .HasColumnType("int");

                    b.Property<int>("cantidadCompra")
                        .HasColumnType("int");

                    b.HasKey("idUsuario", "idFuncion");

                    b.HasIndex("idFuncion");

                    b.ToTable("UF");
                });

            modelBuilder.Entity("TP_grupoA_Cine.Funcion", b =>
                {
                    b.HasOne("TP_grupoA_Cine.Pelicula", "MiPelicula")
                        .WithMany("MisFunciones")
                        .HasForeignKey("idPelicula")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP_grupoA_Cine.Sala", "MiSala")
                        .WithMany("MisFunciones")
                        .HasForeignKey("idSala")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MiPelicula");

                    b.Navigation("MiSala");
                });

            modelBuilder.Entity("TP_grupoA_Cine.UsuarioFuncion", b =>
                {
                    b.HasOne("TP_grupoA_Cine.Funcion", "MiFuncion")
                        .WithMany("UsuarioFuncion")
                        .HasForeignKey("idFuncion")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TP_grupoA_Cine.Usuario", "MiUsuario")
                        .WithMany("UsuarioFuncion")
                        .HasForeignKey("idUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MiFuncion");

                    b.Navigation("MiUsuario");
                });

            modelBuilder.Entity("TP_grupoA_Cine.Funcion", b =>
                {
                    b.Navigation("UsuarioFuncion");
                });

            modelBuilder.Entity("TP_grupoA_Cine.Pelicula", b =>
                {
                    b.Navigation("MisFunciones");
                });

            modelBuilder.Entity("TP_grupoA_Cine.Sala", b =>
                {
                    b.Navigation("MisFunciones");
                });

            modelBuilder.Entity("TP_grupoA_Cine.Usuario", b =>
                {
                    b.Navigation("UsuarioFuncion");
                });
#pragma warning restore 612, 618
        }
    }
}
